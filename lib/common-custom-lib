#!/bin/bash
# Common custom methode to tune trac
# Author: jdum
# Date: 1 mai 2019
# Version 1.7
#-----------------------------------------------------------------------------------------------
# Customize the trac project
#/usr/lib/python2.7/site-packages/trac/htdocs/

declare -a CUSTOM_METHODS=(  "_setTracIniLogoProject" "_setTicketMilestones" "_setTicketVersions" \
                           "_setTicketComponents" "_setDefaultTicketValues" "_customizeWikiPages" )
declare -a POST_PLUGIN_CUSTOM_METHODS=( "_setNewLookAndFeel" "_customizeTicketImport" "_setTracLogging" "_setGit" "setXmlRpc" "_setTracStats")



#--------------------------------------------------------------------------------------------------------------
# Name        :
# parameters  :
# Description : configure specific xmlsettings with trac-admin
# Returns     :
#
_setTracStats()
{
  _mdbg 1 "-- Enter _setTracStats"

  #sudo trac-admin $PROJECT_DIR permission add authenticated STATS_VIEW  || _die "Cannot set STATS_VIEW permission to authenticated"

  _mok "XML_RPC permission granted to authenticated users"

  _mdbg 1 "-- Leave _setTracStats"
}
#---
#--------------------------------------------------------------------------------------------------------------
# Name        :
# parameters  :
# Description : configure specific xmlsettings with trac-admin
# Returns     :
#
_setXmlRpc()
{
  _mdbg 1 "-- Enter _setXmlRpc"

  sudo trac-admin $PROJECT_DIR permission add authenticated XML_RPC  || _die "Cannot register XML_RPC permission to authenticated"

  _mok "XML_RPC permission granted to authenticated users"

  _mdbg 1 "-- Leave _setXmlRpc"
}
#--------------------------------------------------------------------------------------------------------------
# Name        :
# parameters  :
# Description : Creates git repo
# Returns     :
#
_setGit()
{

  local aliasRepo=$0
  local defaultRepoName='(default)'

  _minf "Setup git depot on vmgit server"

  [ -d ${GIT_REPO_DIR} ] && sudo rm -rf ${GIT_REPO_DIR}

  sudo mkdir -p ${GIT_REPO_DIR} || _die "Cannot create : ${GIT_REPO_DIR}"
  sudo chown jdum:apache ${GIT_REPO_DIR}

  _mok "Created directory ${GIT_REPO_DIR}"

  cd "${GIT_REPO_DIR}";
  git init --bare || _die "Cannot create ${GIT_REPO_DIR} git bare repository"

  _minf "${GIT_REPO_DIR} is a bare repository"

  if sudo -u apache git --git-dir=${GIT_REPO_DIR} count-objects -v
  then
     _minf "Permissions on $GIT_DEPOT_DIR are fine"
  else
      _die "Invalid access right on $GIT_DEPOT_DIR"
  fi


  cat <<EOF > ${GIT_REPO_DIR}/hooks/post-commit
#!/bin/bash
REV=\$(git rev-parse HEAD)
sudo trac-admin ${PROJECT_DIR} changeset added "${defaultRepoName}"  \$REV
EOF

[ $? -eq 0 ] && _mok "Post commit hook in place"

cat <<EOF > ${GIT_REPO_DIR}/hooks/post-receive
#!/bin/bash
tracenv=${PROJECT_DIR}    # change with your Trac environment's path
repos="${defaultRepoName}"                   # change with your repository's name
while read oldrev newrev refname; do
    if [ "\$oldrev" = 0000000000000000000000000000000000000000 ]; then
        git rev-list --reverse "\$newrev" --
    else
        git rev-list --reverse "\$newrev" "^\$oldrev" --
    fi | xargs sudo trac-admin "\$tracenv" changeset added "\$repos"
done
EOF
[ $? -eq 0 ] && _mok "Post receive hook in place"

for hook in post-receive post-commit
do
  [ -f ${GIT_REPO_DIR}/hooks/$hook ] && chmod +rx ${GIT_REPO_DIR}/hooks/$hook
done
if [[ -r $GIT_REPO_DIR && -x $GIT_REPO_DIR  ]]
then
    sudo trac-admin "$PROJECT_DIR" repository add "${defaultRepoName}" ${GIT_REPO_DIR} git || _die "trac-admin repository add failed"
    _mok "repository added to $PROJECT_DIR"
    cd $GIT_REPO_DIR # has to be done in the .git directory, not sure
    rev=$(git rev-parse HEAD)
    _minf "Found rev=>$rev<"
    if [ "$rev" == "HEAD" ] # The repo is blank
    then
          cd $HOME
          [ -d $HOME/gtrac ] && sudo rm -rf $HOME/gtrac
          git clone jdum@vmtrac:${GIT_REPO_DIR}
          cd gtrac
          > F1;git add . ; git add F1; git commit -m "Initial commit F1" ; git push origin master
    fi
    rev=$(git rev-parse HEAD)
    sudo trac-admin "$PROJECT_DIR" changeset added ${defaultRepoName} $rev              || _die "trac-admin changeset added failed"
    sudo trac-admin "$PROJECT_DIR" repository resync ${defaultRepoName} $rev              || _die "trac-admin repository resync failed"
    #sudo trac-admin "$PROJECT_DIR" repository alias "${repoAlias}" ${defaultRepoName}   || _die "trac-admin repository alias failed"
else
     _die "Repo is not readable"
fi

_mdbg 1 "-- Leave _setGit"
return 0
}

#--------------------------------------------------------------------------------------------------------------
# Name        :
# parameters  :
# Description :
# Returns     :
#
_setNewLookAndFeel()
{
  _mdbg 1 "-- Enter _setNewLookAndFeel"

  for htmlFile in $HTML_SITE_FILE $HTML_THEME_FILE
  do
      [ -f ${htmlFile} ] && sudo cp ${htmlFile} $PROJECT_TEMPLATES_DIR
      [ -f ${htmlFile} ] && sudo chown -R apache:apache $PROJECT_TEMPLATES_DIR
  done

  [ -f $CSS_SITE_FILE ]  && sudo cp $CSS_SITE_FILE $HTDOCS_DIR
  [ -f $CSS_SITE_FILE ]  && sudo chown -R apache:apache $HTDOCS_DIR
  _mdbg 1 "-- Leave _setNewLookAndFeel"
  return 0
}
#--------------------------------------------------------------------------------------------------------------
# Name        :
# parameters  :
# Description :
# Returns     :
#
_customizeWikiPages()
{
 _mdbg 1  "-- Enter _customizeWikiPages"
 if [ -d ${IMPORT_WIKI_PAGES_DIR} ]
 then
       cd ${IMPORT_WIKI_PAGES_DIR}

       for page_txt in *.txt
       do
         _mdbg 2  "Will import $page_txt"
         sudo trac-admin $PROJECT_DIR wiki import ${page_txt%.txt} ${page_txt} 2>&1 >/dev/null || _die "Cannot import wiki page :$page_txt"
       done
 fi
 _mdbg 1  "-- Leave _customizeWikiPages"
 return 0
}
#--------------------------------------------------------------------------------------------------------------
# Name        :
# parameters  :
# Description :
# Returns     :
#
_customizeTicketImport()
{
  _mdbg 1  "-- Enter customizeTicketImport"
  for user in ${!USERS[*]}
  do
    sudo trac-admin ${PROJECT_DIR}  permission add ${user} IMPORT_EXECUTE || _die "Cannot add permission IMPORT_EXECUTE for $user"
    _minf " $user got IMPORT_EXECUTE permission"
  done
  _mdbg 1  "-- Leave customizeTicketImport"
  return 0
}
#--------------------------------------------------------------------------------------------------------------
# Name        :
# parameters  :
# Description :
# Returns     :
#
_setTracLogging()
{
  declare -A logging=(["log_file"]="${PROJECT}.log" ["log_type"]="file"  ["log_level"]="DEBUG" ["log_format"]='($(thread)d) Trac[$(basename)s:$(module)s] $(levelname)s: $(message)s' )
  _mdbg 1  "-- Enter _setTracLogging"
  sudo touch $PROJECT_DIR/log/${PROJECT}.log

  [ -f $PROJECT_DIR/log/${PROJECT}.log ] && _minf "$(ls -l $PROJECT_DIR/log)" && \
  sudo chown apache:apache $PROJECT_DIR/log/${PROJECT}.log && _minf "$(ls -l $PROJECT_DIR/log)"

  for option in ${!logging[*]}
  do
    sudo trac-admin ${PROJECT_DIR} config set "logging" "${option}" "${logging["$option"]}" 2>&1 > /dev/null || _die "tracadmin config set logging failed"
  done

  _mdbg 1  "-- Leave _setTracLogging"
  return 0
}
#--------------------------------------------------------------------------------------------------------------
# Name        :
# parameters  :
# Description :
# Returns     :
#
_setTracIniLogoProject()
{
  _mdbg 1  "-- Enter _setTracIniLogoProject"
  local uProject=$(_upperCase "${PROJECT}")
  local srcPath="site/$(basename ${LOGO_FILE})"           #relative logo website path::
  declare -A header_logo=(["src"]="${srcPath}" ["alt"]="${uProject}" ["width"]="150" ["height"]="100" ["link"]="${PROJECT_URL}")


  [ -f ${ICO_FILE} ] && _mdbg 2 "Found an icone to install"
  _minf "Configure the icon  project"
  sudo cp ${ICO_FILE} ${PROJECT_DIR}/htdocs                   && _mdbg 2  "Logo cp ${LOGO_FILE} transfered under ${PROJECT_DIR}/htdocs"
  sudo trac-admin ${PROJECT_DIR} config set "project" "descr" "A reliable $(_upperCase $PROJECT)"                                   || _die "tracadmin config set failed "
  sudo trac-admin ${PROJECT_DIR} config set "project" "footer" "More about<br /><a href="http://$(uname -n)/$PROJECT">$PROJECT</a>" || _die "tracadmin config set failed "
  sudo trac-admin ${PROJECT_DIR} config set "project" "name" "$(_upperCase $PROJECT)"                                               || _die "tracadmin config set failed "
  sudo trac-admin ${PROJECT_DIR} config set "project" "icon" "site/${PROJECT}.ico"                                                  || _die "tracadmin config set failed "

  [ -f ${LOGO_FILE} ] && _mdbg 2 "Found a logo to install"
  sudo cp ${LOGO_FILE} ${PROJECT_DIR}/htdocs                   && _mdbg 2  "Logo cp ${LOGO_FILE} transfered under ${PROJECT_DIR}/htdocs"
  for logoSetting in ${!header_logo[@]}
  do
   _mdbg 2  "Will modify ${logoSetting}=${header_logo[${logoSetting}]}"
    sudo trac-admin ${PROJECT_DIR} config set "header_logo" "${logoSetting}" "${header_logo[${logoSetting}]}" || _die "tracadmin config set failed "
    newValue=$(sudo trac-admin ${PROJECT_DIR} config get "header_logo" "${logoSetting}")                      && \
    _mdbg 3  "[header_logo] has new settings ${logoSetting} = ${header_logo[${logoSetting}]}"
  done
  [ -f ${PROJECT_DIR}/htdocs/${PROJECT}.png ] && sudo chown apache:apache ${PROJECT_DIR}/htdocs/${PROJECT}.png && _mdbg 3 "Changed logo ownetship"
 _mdbg 1  "-- Leave _setTracIniLogoProject"
 return 0
}
#--------------------------------------------------------------------------------------------------------------
# Name        :
# parameters  :
# Description :
# Returns     :
#
_setTicketMilestones()
{
     _mdbg 1  "-- Enter _setTicketMilestones"
   local title=$(_upperCase "${PROJECT}")
   for i in 1 2 3 4
   do
     sudo trac-admin $PROJECT_DIR milestone rename "milestone${i}" "${title}${i}" || _die "tracadmin  milestone rename failed "
     _mdbg 2  "milestone${i} changed value to ${title}${i}"
   done
   _mdbg 1  "-- Leave _setTicketMilestones"
   return 0
}
_setTicketVersions()
{
   _mdbg 1  "-- Enter _setTicketVersions"
   sudo trac-admin $PROJECT_DIR version add "3.0"  || _die "tracadmin  version add failed "
  _mdbg 6 "Add new ticket version"
   _mdbg 1  "-- Leave _setTicketVersions"
   return 0
}
#--------------------------------------------------------------------------------------------------------------
# Name        :
# parameters  :
# Description :
# Returns     :
#
_setTicketComponents()
{
    _mdbg 1  "-- Enter _setTicketComponents"
    for component in component1 component2
    do
              sudo trac-admin $PROJECT_DIR component remove $component 2>&1 | tee --append $LOG_FILE >/dev/null && _mdbg 2 "Removed $component"
    done

    for component in "Hardware installation" "Hardware configuration" "Software installation" "Software configuration" \
                      "Script development" "Application development" "Network management"
    do
              sudo trac-admin $PROJECT_DIR component add  "$component" 2>&1 >/dev/null || _die "tracadmin component add failed "
              _mdbg 2 "Removed $component"
    done
    _mdbg 1  "-- Leave _setTicketComponents"
    return 0
}
#--------------------------------------------------------------------------------------------------------------
# Name        :
# parameters  :
# Description :
# Returns     :
#
_setDefaultTicketValues()
{
  _mdbg 1  "-- Enter _setDefaultTicketValues"

  sudo trac-admin ${PROJECT_DIR} config set "ticket" "default_type"      "task"                     2>&1 >/dev/null || _die "tracadmin config set failed "
  _mdbg 2  "$PROJECT with default_type task"
  sudo trac-admin ${PROJECT_DIR} config set "ticket" "default_version"   "1.0"                      2>&1 >/dev/null || _die "tracadmin config set failed "
  _mdbg 2  "$PROJECT with default_version 1.0"
  sudo trac-admin ${PROJECT_DIR} config set "ticket" "default_component" "Software installation"    2>&1 >/dev/null || _die "tracadmin config set failed "
  _mdbg 2  "$PROJECT with default_component Software installation"
  sudo trac-admin ${PROJECT_DIR} config set "ticket" "default_milestone" "$(_upperCase $PROJECT)1"  2>&1 >/dev/null || _die "tracadmin config set failed "
  _mdbg 2  "$PROJECT with default_milestone is ${PROJECT}1"

  _mdbg 1  "-- Enter _setDefaultTicketValues"
  return 0
}
