#!/bin/bash
# Common custom methode to tune trac
# Author: jdum
# Date: 1 mai 2019
# Version 1.7
#-----------------------------------------------------------------------------------------------
# Customize the trac project
#/usr/lib/python2.7/site-packages/trac/htdocs/

declare -a CUSTOM_METHODS=(  "_setTracIniLogoProject" "_setTicketMilestones" "_setTicketVersions" \
                           "_setTicketComponents" "_setDefaultTicketValues" "_customizeWikiPages" )
declare -a POST_PLUGIN_CUSTOM_METHODS=( "_setNewLookAndFeel" "_customizeTicketImport" "_setTracLogging")


_setNewLookAndFeel()
{
  _mdbg 1 "-- Enter _setNewLookAndFeel"

  [ -f $HTML_SITE_FILE ] && sudo cp $HTML_SITE_FILE $PROJECT_TEMPLATES_DIR
  [ -f $HTML_SITE_FILE ] && sudo chown -R apache:apache $PROJECT_TEMPLATES_DIR
  [ -f $CSS_SITE_FILE ]  && sudo cp $CSS_SITE_FILE $HTDOCS_DIR
  [ -f $CSS_SITE_FILE ]  && sudo chown -R apache:apache $HTDOCS_DIR
  _mdbg 1 "-- Leave _setNewLookAndFeel"
}

_customizeWikiPages()
{
 _mdbg 1  "-- Enter _customizeWikiPages"
 if [ -d ${IMPORT_WIKI_PAGES_DIR} ]
 then
       cd ${IMPORT_WIKI_PAGES_DIR}

       for page_txt in *.txt
       do
         _mdbg 2  "Will import $page_txt"
         sudo trac-admin $PROJECT_DIR wiki import ${page_txt%.txt} ${page_txt} 2>&1 >/dev/null && _mdbg 2 "$page_txt has been imported in Wiki"
       done
 fi
 _mdbg 1  "-- Leave _customizeWikiPages"
 return 0
}
_customizeTicketImport()
{
  _mdbg 1  "-- Enter customizeTicketImport"
  for user in ${!USERS[*]}
  do
    sudo trac-admin ${PROJECT_DIR}  permission add ${user} IMPORT_EXECUTE && _minf " $user got IMPORT_EXECUTE permission"
  done
  _mdbg 1  "-- Leave customizeTicketImport"
  return 0
}

_setTracLogging()
{
  _mdbg 1  "-- Enter _setTracLogging"
  sudo touch $PROJECT_DIR/log/${PROJECT}.log

  [ -f $PROJECT_DIR/log/${PROJECT}.log ] && _minf "$(ls -l $PROJECT_DIR/log)" && \
  sudo chown apache:apache $PROJECT_DIR/log/${PROJECT}.log && _minf "$(ls -l $PROJECT_DIR/log)"

  sudo trac-admin ${PROJECT_DIR} config set "logging" "log_file" "${PROJECT}.log" 2>&1 > /dev/null || \
  _mnok "tracadmin failed with errno=$?"

  sudo trac-admin ${PROJECT_DIR} config set "logging" "log_type" "file" || \
  _mnok "tracadmin failed with errno=$?"

  sudo trac-admin ${PROJECT_DIR} config set "logging" "log_level" "DEBUG" || \
  _mnok "tracadmin failed with errno=$?"

  sudo trac-admin ${PROJECT_DIR} config set "logging" "log_format" '($(thread)d) Trac[$(basename)s:$(module)s] $(levelname)s: $(message)s' || \
  _mnok "tracadmin failed with errno=$?"

  _mdbg 1  "-- Leave _setTracLogging"
  return 0
}
_setTracIniLogoProject()
{
  _mdbg 1  "-- Enter _setTracIniLogoProject"
  uProject=$(_upperCase "${PROJECT}")
  srcPath="site/$(basename ${LOGO_FILE})"           #relative logo website path::
  declare -A header_logo=(["src"]="${srcPath}" ["alt"]="${uProject}" ["width"]="150" ["height"]="100" ["link"]="${PROJECT_URL}")

  [ -f ${LOGO_FILE} ] && _mdbg 2 "Found a logo to install"
  sudo cp ${LOGO_FILE} ${PROJECT_DIR}/htdocs                   && _mdbg 2  "Logo cp ${LOGO_FILE} transfered under ${PROJECT_DIR}/htdocs"

  for logoSetting in ${!header_logo[@]}
  do
   _mdbg 2  "Will modify ${logoSetting}=${header_logo[${logoSetting}]}"
    sudo trac-admin ${PROJECT_DIR} config set "header_logo" "${logoSetting}" "${header_logo[${logoSetting}]}" || _mnok "tracadmin failed with errno=$?"
    newValue=$(sudo trac-admin ${PROJECT_DIR} config get "header_logo" "${logoSetting}")                      && \
    _mdbg 3  "[header_logo] has new settings ${logoSetting} = ${header_logo[${logoSetting}]}"
  done
  [ -f ${PROJECT_DIR}/htdocs/${PROJECT}.png ] && sudo chown apache:apache ${PROJECT_DIR}/htdocs/${PROJECT}.png && _mdbg 3 "Changed logo ownetship"
 _mdbg 1  "-- Leave _setTracIniLogoProject"
 return 0
}


_setTicketMilestones()
{
     _mdbg 1  "-- Enter _setTicketMilestones"
   title=$(_upperCase "${PROJECT}")
   for i in 1 2 3 4
   do
     sudo trac-admin $PROJECT_DIR milestone rename "milestone${i}" "${title}${i}" && _mdbg 2  "milestone${i} changed value to ${title}${i}"
   done
   _mdbg 1  "-- Leave _setTicketMilestones"
   return 0
}
_setTicketVersions()
{
   _mdbg 1  "-- Enter _setTicketVersions"
   sudo trac-admin $PROJECT_DIR version add "3.0" && _mdbg 6 "Add new ticket version"
   _mdbg 1  "-- Leave _setTicketVersions"
   return 0
}
_setTicketComponents()
{
    _mdbg 1  "-- Enter _setTicketComponents"
    for component in component1 component2
    do
              sudo trac-admin $PROJECT_DIR component remove $component 2>&1 | tee --append $LOG_FILE >/dev/null && _mdbg 2 "Removed $component"
    done

    for component in "Hardware installation" "Hardware configuration" "Software installation" "Software configuration" \
                      "Script development" "Application development" "Network management"
    do
              sudo trac-admin $PROJECT_DIR component add  "$component" 2>&1 >/dev/null && _mdbg 2 "Removed $component"
    done
    _mdbg 1  "-- Leave _setTicketComponents"
    return 0
}
_setDefaultTicketValues()
{
  _mdbg 1  "-- Enter _setDefaultTicketValues"
  sudo trac-admin ${PROJECT_DIR} config set "ticket" "default_type"      "task"                     2>&1 >/dev/null && _mdbg 2  "$PROJECT with default_type task"
  sudo trac-admin ${PROJECT_DIR} config set "ticket" "default_version"   "1.0"                      2>&1 >/dev/null && _mdbg 2  "$PROJECT with default_version 1.0"
  sudo trac-admin ${PROJECT_DIR} config set "ticket" "default_component" "Software installation"    2>&1 >/dev/null && _mdbg 2  "$PROJECT with default_component Software installation"
  sudo trac-admin ${PROJECT_DIR} config set "ticket" "default_milestone" "$(_upperCase $PROJECT)1"  2>&1 >/dev/null && _mdbg 2  "$PROJECT with default_milestone is ${PROJECT}1"
  _mdbg 1  "-- Enter _setDefaultTicketValues"
  return 0
}
