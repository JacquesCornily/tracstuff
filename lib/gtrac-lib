#!/bin/bash
# gtrac-lib shell script library
# Author: jdum
# Date: 30 avril 2019
# Version 1.1
#

declare -a VALID_LEVELS=( 0 1 2 3 4 5 6 21 ) # supported debug level by gtrac

[ -f ./lib/common-lib ] && source ./lib/common-lib # Import low level methods

#--------------------------------------------------------------------------------------------------------------
# Name        : _checkParam
# parameters  : command line paramters
# Description : Check gtrac command line parameters
# Returns     : true, or exits if necessary
#
_checkParam()
{
  if [ $# -eq 1 ]
  then
      case $1 in
      -V|--version) echo "$0 version $VERSION"
      exit 0
      ;;
      -h|--help) _helpMe
      ;;
      *) _errorParam
      ;;
      esac
  fi
  if [ $# -eq 3 ]
  then
      case $1 in
      -v|--verbose) VERBOSE=1;shift;_checkParam $*
      ;;
      *) _errorParam
      ;;
      esac
  fi
  if [[ $(( $# % 2 )) == 0 ]]
  then

    if [ $# -eq 2 ]
    then
          case $1 in
          -p|--project)
                     case $2 in
                          [a-zA-Z1-9]*) PROJECT=$2

                          return 0
                          ;;
                          *) _errorParam
                          ;;
                     esac
          ;;
          *) _errorParam
          ;;
          esac
    fi
    if [ $# -ge 4 ]
    then
          case $1 in
          -d|--debug)
                    if ! _isInArray VALID_LEVELS $2
                    then
                      { _mnok "Invalid debug level : $2 ,supported one's are 1 2 3 4 5 6 21" ;exit 3; }   # no
                    fi
                    { DEBUG=$2;shift;shift;_checkParam $*; }
          ;;
          *) _errorParam
          ;;
          esac
    fi
  else
        _errorParam
  fi
  return 0
}
#--------------------------------------------------------------------------------------------------------------
# Name        : _errorParam
# parameters  :
# Description : Display command line parameter error message
# Returns     :
#
_errorParam()
{
  _mnok "Invalid parameter, see $0 -h"
  exit 1
}
#--------------------------------------------------------------------------------------------------------------
# Name        :
# parameters  :
# Description :
# Returns     :
#
_helpMe()
{
   echo "e.g  $0 -p <PROJECT NAME> or $0 --project <PROJECT NAME>"
   echo "with debug -d 1 -p <PROJECT NAME>"
  exit 0
}
#------------------------------------
